#!/usr/bin/env python
import asyncore
import socket

CLIENTS = []

class EchoHandler(asyncore.dispatcher_with_send):

    def handle_read(self):
        data = self.recv(8192)
        print "RECEIVED {}".format(data)
        if data:
            for pair in CLIENTS:
              sock, addr = pair
              print "sock: {}  addr: {}".format(sock, addr)
              try:
                sock.send(data)
              except:
                print "bad socket {}".format(sock)
                CLIENTS.remove(pair)

class EchoServer(asyncore.dispatcher):

    def __init__(self, host, port):
        asyncore.dispatcher.__init__(self)
        self.create_socket(socket.AF_INET, socket.SOCK_STREAM)
        self.set_reuse_addr()
        self.bind((host, port))
        self.listen(5)

    def handle_accept(self):
        pair = self.accept()
        if pair is not None:
            CLIENTS.append(pair)
            sock, addr = pair
            print 'Incoming connection from %s' % repr(addr)
            handler = EchoHandler(sock)

server = EchoServer('localhost', 8080)
asyncore.loop()
